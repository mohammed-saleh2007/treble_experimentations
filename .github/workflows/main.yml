# This is a basic workflow to help you get started with Actions

name: build_gsi

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: sudo apt install git repo xz-utils make wget zip unzip  -y

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
             bash
             wget https://dl.google.com/android/repository/platform-tools-latest-linux.zip
             unzip platform-tools-latest-linux.zip
             echo "# add Android SDK platform tools to path" >> ~/.profile
             echo "if [ -d "$HOME/platform-tools" ] ; then" >> ~/.profile
             echo "    PATH="$HOME/platform-tools:$PATH"" >> ~/.profile
             echo "fi" >> ~/.profile
             source ~/.profile
             sudo apt install bc bison build-essential curl flex g++-multilib gcc-multilib git gnupg gperf libxml2 \
             lib32z1-dev liblz4-tool libncurses5-dev libsdl1.2-dev libwxgtk3.0-gtk3-dev imagemagick git \
             lunzip lzop schedtool squashfs-tools xsltproc zip zlib1g-dev openjdk-8-jdk python3 perl  \
             xmlstarlet virtualenv xz-utils rr jq libncurses5 pngcrush lib32ncurses5-dev git-lfs libxml2 \
             openjdk-11-jdk-headless -y
             mkdir -p ~/bin
             curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
             chmod a+x ~/bin/repo
             echo "# set PATH so it includes user's private bin if it exists" >> ~/.profile
             echo "if [ -d "$HOME/bin" ] ; then" >> ~/.profile
             echo "    PATH="$HOME/bin:$PATH"" >> ~/.profile
             echo "fi" >> ~/.profile
             source ~/.profile 
             git config --global user.name "Mohammed Saleh"
             git config --global user.email mohamedsalehbtw@gmail.com
             export USE_CCACHE=1
             export CCACHE_COMPRESS=1
             export CCACHE_MAXSIZE=50G # 50 GB
             # LineageOS 19.1 is used for this example
             git clone https://github.com/phhusson/treble_experimentations
             git clone https://github.com/phhusson/treble_experimentations
             mkdir Lineage; cd Lineage
             bash ../treble_experimentations/build-dakkar.sh aosp90 a64-ab-floss-su
             ls
             cd treble_experimentations
             ls
             xz -9 -T0 -v -z system.img

      - name: Upload for downlaoding
        uses: actions/upload-artifact@v3
        with:
          name: production
          path: system.img.xz# This is a basic workflow to help you get started with Actions
